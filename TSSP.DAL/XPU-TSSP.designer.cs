#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TSSP.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="XPU-TSSP")]
	public partial class XPU_TSSPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertStudents(Students instance);
    partial void UpdateStudents(Students instance);
    partial void DeleteStudents(Students instance);
    partial void InsertComments(Comments instance);
    partial void UpdateComments(Comments instance);
    partial void DeleteComments(Comments instance);
    partial void InsertCompanyProfiles(CompanyProfiles instance);
    partial void UpdateCompanyProfiles(CompanyProfiles instance);
    partial void DeleteCompanyProfiles(CompanyProfiles instance);
    partial void InsertCompanyReviews(CompanyReviews instance);
    partial void UpdateCompanyReviews(CompanyReviews instance);
    partial void DeleteCompanyReviews(CompanyReviews instance);
    partial void InsertEnterprises(Enterprises instance);
    partial void UpdateEnterprises(Enterprises instance);
    partial void DeleteEnterprises(Enterprises instance);
    partial void InsertInternshipEmploymentExperiences(InternshipEmploymentExperiences instance);
    partial void UpdateInternshipEmploymentExperiences(InternshipEmploymentExperiences instance);
    partial void DeleteInternshipEmploymentExperiences(InternshipEmploymentExperiences instance);
    partial void InsertInternshipEmploymentReviews(InternshipEmploymentReviews instance);
    partial void UpdateInternshipEmploymentReviews(InternshipEmploymentReviews instance);
    partial void DeleteInternshipEmploymentReviews(InternshipEmploymentReviews instance);
    partial void InsertInterviewInvitations(InterviewInvitations instance);
    partial void UpdateInterviewInvitations(InterviewInvitations instance);
    partial void DeleteInterviewInvitations(InterviewInvitations instance);
    partial void InsertJobPostings(JobPostings instance);
    partial void UpdateJobPostings(JobPostings instance);
    partial void DeleteJobPostings(JobPostings instance);
    partial void InsertPersonalResumes(PersonalResumes instance);
    partial void UpdatePersonalResumes(PersonalResumes instance);
    partial void DeletePersonalResumes(PersonalResumes instance);
    partial void InsertProjects(Projects instance);
    partial void UpdateProjects(Projects instance);
    partial void DeleteProjects(Projects instance);
    partial void InsertProjectSubmissions(ProjectSubmissions instance);
    partial void UpdateProjectSubmissions(ProjectSubmissions instance);
    partial void DeleteProjectSubmissions(ProjectSubmissions instance);
    partial void InsertResumes(Resumes instance);
    partial void UpdateResumes(Resumes instance);
    partial void DeleteResumes(Resumes instance);
    #endregion
		
		public XPU_TSSPDataContext() : 
				base(global::TSSP.DAL.Properties.Settings.Default.XPU_TSSPConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public XPU_TSSPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XPU_TSSPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XPU_TSSPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XPU_TSSPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Students> Students
		{
			get
			{
				return this.GetTable<Students>();
			}
		}
		
		public System.Data.Linq.Table<Comments> Comments
		{
			get
			{
				return this.GetTable<Comments>();
			}
		}
		
		public System.Data.Linq.Table<CompanyProfiles> CompanyProfiles
		{
			get
			{
				return this.GetTable<CompanyProfiles>();
			}
		}
		
		public System.Data.Linq.Table<CompanyReviews> CompanyReviews
		{
			get
			{
				return this.GetTable<CompanyReviews>();
			}
		}
		
		public System.Data.Linq.Table<Enterprises> Enterprises
		{
			get
			{
				return this.GetTable<Enterprises>();
			}
		}
		
		public System.Data.Linq.Table<InternshipEmploymentExperiences> InternshipEmploymentExperiences
		{
			get
			{
				return this.GetTable<InternshipEmploymentExperiences>();
			}
		}
		
		public System.Data.Linq.Table<InternshipEmploymentReviews> InternshipEmploymentReviews
		{
			get
			{
				return this.GetTable<InternshipEmploymentReviews>();
			}
		}
		
		public System.Data.Linq.Table<InterviewInvitations> InterviewInvitations
		{
			get
			{
				return this.GetTable<InterviewInvitations>();
			}
		}
		
		public System.Data.Linq.Table<JobPostings> JobPostings
		{
			get
			{
				return this.GetTable<JobPostings>();
			}
		}
		
		public System.Data.Linq.Table<PersonalResumes> PersonalResumes
		{
			get
			{
				return this.GetTable<PersonalResumes>();
			}
		}
		
		public System.Data.Linq.Table<Projects> Projects
		{
			get
			{
				return this.GetTable<Projects>();
			}
		}
		
		public System.Data.Linq.Table<ProjectSubmissions> ProjectSubmissions
		{
			get
			{
				return this.GetTable<ProjectSubmissions>();
			}
		}
		
		public System.Data.Linq.Table<Resumes> Resumes
		{
			get
			{
				return this.GetTable<Resumes>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Students")]
	public partial class Students : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FullName;
		
		private string _Nickname;
		
		private string _Gender;
		
		private string _Email;
		
		private string _Phone;
		
		private string _Address;
		
		private string _Password;
		
		private EntitySet<Comments> _Comments;
		
		private EntitySet<CompanyReviews> _CompanyReviews;
		
		private EntitySet<InternshipEmploymentExperiences> _InternshipEmploymentExperiences;
		
		private EntitySet<InternshipEmploymentReviews> _InternshipEmploymentReviews;
		
		private EntitySet<InterviewInvitations> _InterviewInvitations;
		
		private EntitySet<PersonalResumes> _PersonalResumes;
		
		private EntitySet<ProjectSubmissions> _ProjectSubmissions;
		
		private EntitySet<Resumes> _Resumes;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnNicknameChanging(string value);
    partial void OnNicknameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Students()
		{
			this._Comments = new EntitySet<Comments>(new Action<Comments>(this.attach_Comments), new Action<Comments>(this.detach_Comments));
			this._CompanyReviews = new EntitySet<CompanyReviews>(new Action<CompanyReviews>(this.attach_CompanyReviews), new Action<CompanyReviews>(this.detach_CompanyReviews));
			this._InternshipEmploymentExperiences = new EntitySet<InternshipEmploymentExperiences>(new Action<InternshipEmploymentExperiences>(this.attach_InternshipEmploymentExperiences), new Action<InternshipEmploymentExperiences>(this.detach_InternshipEmploymentExperiences));
			this._InternshipEmploymentReviews = new EntitySet<InternshipEmploymentReviews>(new Action<InternshipEmploymentReviews>(this.attach_InternshipEmploymentReviews), new Action<InternshipEmploymentReviews>(this.detach_InternshipEmploymentReviews));
			this._InterviewInvitations = new EntitySet<InterviewInvitations>(new Action<InterviewInvitations>(this.attach_InterviewInvitations), new Action<InterviewInvitations>(this.detach_InterviewInvitations));
			this._PersonalResumes = new EntitySet<PersonalResumes>(new Action<PersonalResumes>(this.attach_PersonalResumes), new Action<PersonalResumes>(this.detach_PersonalResumes));
			this._ProjectSubmissions = new EntitySet<ProjectSubmissions>(new Action<ProjectSubmissions>(this.attach_ProjectSubmissions), new Action<ProjectSubmissions>(this.detach_ProjectSubmissions));
			this._Resumes = new EntitySet<Resumes>(new Action<Resumes>(this.attach_Resumes), new Action<Resumes>(this.detach_Resumes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nickname", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nickname
		{
			get
			{
				return this._Nickname;
			}
			set
			{
				if ((this._Nickname != value))
				{
					this.OnNicknameChanging(value);
					this.SendPropertyChanging();
					this._Nickname = value;
					this.SendPropertyChanged("Nickname");
					this.OnNicknameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_Comments", Storage="_Comments", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<Comments> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_CompanyReviews", Storage="_CompanyReviews", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<CompanyReviews> CompanyReviews
		{
			get
			{
				return this._CompanyReviews;
			}
			set
			{
				this._CompanyReviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_InternshipEmploymentExperiences", Storage="_InternshipEmploymentExperiences", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<InternshipEmploymentExperiences> InternshipEmploymentExperiences
		{
			get
			{
				return this._InternshipEmploymentExperiences;
			}
			set
			{
				this._InternshipEmploymentExperiences.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_InternshipEmploymentReviews", Storage="_InternshipEmploymentReviews", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<InternshipEmploymentReviews> InternshipEmploymentReviews
		{
			get
			{
				return this._InternshipEmploymentReviews;
			}
			set
			{
				this._InternshipEmploymentReviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_InterviewInvitations", Storage="_InterviewInvitations", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<InterviewInvitations> InterviewInvitations
		{
			get
			{
				return this._InterviewInvitations;
			}
			set
			{
				this._InterviewInvitations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_PersonalResumes", Storage="_PersonalResumes", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<PersonalResumes> PersonalResumes
		{
			get
			{
				return this._PersonalResumes;
			}
			set
			{
				this._PersonalResumes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_ProjectSubmissions", Storage="_ProjectSubmissions", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<ProjectSubmissions> ProjectSubmissions
		{
			get
			{
				return this._ProjectSubmissions;
			}
			set
			{
				this._ProjectSubmissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_Resumes", Storage="_Resumes", ThisKey="Id", OtherKey="StudentId")]
		public EntitySet<Resumes> Resumes
		{
			get
			{
				return this._Resumes;
			}
			set
			{
				this._Resumes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comments(Comments entity)
		{
			this.SendPropertyChanging();
			entity.Students = this;
		}
		
		private void detach_Comments(Comments entity)
		{
			this.SendPropertyChanging();
			entity.Students = null;
		}
		
		private void attach_CompanyReviews(CompanyReviews entity)
		{
			this.SendPropertyChanging();
			entity.Students = this;
		}
		
		private void detach_CompanyReviews(CompanyReviews entity)
		{
			this.SendPropertyChanging();
			entity.Students = null;
		}
		
		private void attach_InternshipEmploymentExperiences(InternshipEmploymentExperiences entity)
		{
			this.SendPropertyChanging();
			entity.Students = this;
		}
		
		private void detach_InternshipEmploymentExperiences(InternshipEmploymentExperiences entity)
		{
			this.SendPropertyChanging();
			entity.Students = null;
		}
		
		private void attach_InternshipEmploymentReviews(InternshipEmploymentReviews entity)
		{
			this.SendPropertyChanging();
			entity.Students = this;
		}
		
		private void detach_InternshipEmploymentReviews(InternshipEmploymentReviews entity)
		{
			this.SendPropertyChanging();
			entity.Students = null;
		}
		
		private void attach_InterviewInvitations(InterviewInvitations entity)
		{
			this.SendPropertyChanging();
			entity.Students = this;
		}
		
		private void detach_InterviewInvitations(InterviewInvitations entity)
		{
			this.SendPropertyChanging();
			entity.Students = null;
		}
		
		private void attach_PersonalResumes(PersonalResumes entity)
		{
			this.SendPropertyChanging();
			entity.Students = this;
		}
		
		private void detach_PersonalResumes(PersonalResumes entity)
		{
			this.SendPropertyChanging();
			entity.Students = null;
		}
		
		private void attach_ProjectSubmissions(ProjectSubmissions entity)
		{
			this.SendPropertyChanging();
			entity.Students = this;
		}
		
		private void detach_ProjectSubmissions(ProjectSubmissions entity)
		{
			this.SendPropertyChanging();
			entity.Students = null;
		}
		
		private void attach_Resumes(Resumes entity)
		{
			this.SendPropertyChanging();
			entity.Students = this;
		}
		
		private void detach_Resumes(Resumes entity)
		{
			this.SendPropertyChanging();
			entity.Students = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comments")]
	public partial class Comments : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ParentId;
		
		private string _EntityType;
		
		private System.Nullable<int> _EntityId;
		
		private int _StudentId;
		
		private string _CommentText;
		
		private EntitySet<Comments> _Comments2;
		
		private EntityRef<Comments> _Comments1;
		
		private EntityRef<Students> _Students;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnEntityTypeChanging(string value);
    partial void OnEntityTypeChanged();
    partial void OnEntityIdChanging(System.Nullable<int> value);
    partial void OnEntityIdChanged();
    partial void OnStudentIdChanging(int value);
    partial void OnStudentIdChanged();
    partial void OnCommentTextChanging(string value);
    partial void OnCommentTextChanged();
    #endregion
		
		public Comments()
		{
			this._Comments2 = new EntitySet<Comments>(new Action<Comments>(this.attach_Comments2), new Action<Comments>(this.detach_Comments2));
			this._Comments1 = default(EntityRef<Comments>);
			this._Students = default(EntityRef<Students>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._Comments1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityType", DbType="VarChar(50)")]
		public string EntityType
		{
			get
			{
				return this._EntityType;
			}
			set
			{
				if ((this._EntityType != value))
				{
					this.OnEntityTypeChanging(value);
					this.SendPropertyChanging();
					this._EntityType = value;
					this.SendPropertyChanged("EntityType");
					this.OnEntityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityId", DbType="Int")]
		public System.Nullable<int> EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					this.OnEntityIdChanging(value);
					this.SendPropertyChanging();
					this._EntityId = value;
					this.SendPropertyChanged("EntityId");
					this.OnEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="Int NOT NULL")]
		public int StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._Students.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentText", DbType="VarChar(MAX)")]
		public string CommentText
		{
			get
			{
				return this._CommentText;
			}
			set
			{
				if ((this._CommentText != value))
				{
					this.OnCommentTextChanging(value);
					this.SendPropertyChanging();
					this._CommentText = value;
					this.SendPropertyChanged("CommentText");
					this.OnCommentTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comments_Comments", Storage="_Comments2", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<Comments> Comments2
		{
			get
			{
				return this._Comments2;
			}
			set
			{
				this._Comments2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comments_Comments", Storage="_Comments1", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public Comments Comments1
		{
			get
			{
				return this._Comments1.Entity;
			}
			set
			{
				Comments previousValue = this._Comments1.Entity;
				if (((previousValue != value) 
							|| (this._Comments1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comments1.Entity = null;
						previousValue.Comments2.Remove(this);
					}
					this._Comments1.Entity = value;
					if ((value != null))
					{
						value.Comments2.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Comments1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_Comments", Storage="_Students", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public Students Students
		{
			get
			{
				return this._Students.Entity;
			}
			set
			{
				Students previousValue = this._Students.Entity;
				if (((previousValue != value) 
							|| (this._Students.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Students.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._Students.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(int);
					}
					this.SendPropertyChanged("Students");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comments2(Comments entity)
		{
			this.SendPropertyChanging();
			entity.Comments1 = this;
		}
		
		private void detach_Comments2(Comments entity)
		{
			this.SendPropertyChanging();
			entity.Comments1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyProfiles")]
	public partial class CompanyProfiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EnterpriseId;
		
		private string _IntroductionText;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEnterpriseIdChanging(int value);
    partial void OnEnterpriseIdChanged();
    partial void OnIntroductionTextChanging(string value);
    partial void OnIntroductionTextChanged();
    #endregion
		
		public CompanyProfiles()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseId", DbType="Int NOT NULL")]
		public int EnterpriseId
		{
			get
			{
				return this._EnterpriseId;
			}
			set
			{
				if ((this._EnterpriseId != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIdChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseId = value;
					this.SendPropertyChanged("EnterpriseId");
					this.OnEnterpriseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntroductionText", DbType="VarChar(MAX)")]
		public string IntroductionText
		{
			get
			{
				return this._IntroductionText;
			}
			set
			{
				if ((this._IntroductionText != value))
				{
					this.OnIntroductionTextChanging(value);
					this.SendPropertyChanging();
					this._IntroductionText = value;
					this.SendPropertyChanged("IntroductionText");
					this.OnIntroductionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_CompanyProfiles", Storage="_Enterprises", ThisKey="EnterpriseId", OtherKey="Id", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.CompanyProfiles.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.CompanyProfiles.Add(this);
						this._EnterpriseId = value.Id;
					}
					else
					{
						this._EnterpriseId = default(int);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyReviews")]
	public partial class CompanyReviews : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EnterpriseId;
		
		private int _StudentId;
		
		private string _ReviewText;
		
		private System.Nullable<int> _Rating;
		
		private EntityRef<Students> _Students;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEnterpriseIdChanging(int value);
    partial void OnEnterpriseIdChanged();
    partial void OnStudentIdChanging(int value);
    partial void OnStudentIdChanged();
    partial void OnReviewTextChanging(string value);
    partial void OnReviewTextChanged();
    partial void OnRatingChanging(System.Nullable<int> value);
    partial void OnRatingChanged();
    #endregion
		
		public CompanyReviews()
		{
			this._Students = default(EntityRef<Students>);
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseId", DbType="Int NOT NULL")]
		public int EnterpriseId
		{
			get
			{
				return this._EnterpriseId;
			}
			set
			{
				if ((this._EnterpriseId != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIdChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseId = value;
					this.SendPropertyChanged("EnterpriseId");
					this.OnEnterpriseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="Int NOT NULL")]
		public int StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._Students.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewText", DbType="VarChar(MAX)")]
		public string ReviewText
		{
			get
			{
				return this._ReviewText;
			}
			set
			{
				if ((this._ReviewText != value))
				{
					this.OnReviewTextChanging(value);
					this.SendPropertyChanging();
					this._ReviewText = value;
					this.SendPropertyChanged("ReviewText");
					this.OnReviewTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int")]
		public System.Nullable<int> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_CompanyReviews", Storage="_Students", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public Students Students
		{
			get
			{
				return this._Students.Entity;
			}
			set
			{
				Students previousValue = this._Students.Entity;
				if (((previousValue != value) 
							|| (this._Students.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Students.Entity = null;
						previousValue.CompanyReviews.Remove(this);
					}
					this._Students.Entity = value;
					if ((value != null))
					{
						value.CompanyReviews.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(int);
					}
					this.SendPropertyChanged("Students");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_CompanyReviews", Storage="_Enterprises", ThisKey="EnterpriseId", OtherKey="Id", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.CompanyReviews.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.CompanyReviews.Add(this);
						this._EnterpriseId = value.Id;
					}
					else
					{
						this._EnterpriseId = default(int);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Enterprises")]
	public partial class Enterprises : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UnifiedSocialCreditCode;
		
		private string _CompanyName;
		
		private string _ContactEmail;
		
		private string _ContactPhone;
		
		private string _Address;
		
		private string _Password;
		
		private string _LogoImage;
		
		private EntitySet<CompanyProfiles> _CompanyProfiles;
		
		private EntitySet<CompanyReviews> _CompanyReviews;
		
		private EntitySet<InternshipEmploymentReviews> _InternshipEmploymentReviews;
		
		private EntitySet<InterviewInvitations> _InterviewInvitations;
		
		private EntitySet<JobPostings> _JobPostings;
		
		private EntitySet<Projects> _Projects;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnifiedSocialCreditCodeChanging(string value);
    partial void OnUnifiedSocialCreditCodeChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnLogoImageChanging(string value);
    partial void OnLogoImageChanged();
    #endregion
		
		public Enterprises()
		{
			this._CompanyProfiles = new EntitySet<CompanyProfiles>(new Action<CompanyProfiles>(this.attach_CompanyProfiles), new Action<CompanyProfiles>(this.detach_CompanyProfiles));
			this._CompanyReviews = new EntitySet<CompanyReviews>(new Action<CompanyReviews>(this.attach_CompanyReviews), new Action<CompanyReviews>(this.detach_CompanyReviews));
			this._InternshipEmploymentReviews = new EntitySet<InternshipEmploymentReviews>(new Action<InternshipEmploymentReviews>(this.attach_InternshipEmploymentReviews), new Action<InternshipEmploymentReviews>(this.detach_InternshipEmploymentReviews));
			this._InterviewInvitations = new EntitySet<InterviewInvitations>(new Action<InterviewInvitations>(this.attach_InterviewInvitations), new Action<InterviewInvitations>(this.detach_InterviewInvitations));
			this._JobPostings = new EntitySet<JobPostings>(new Action<JobPostings>(this.attach_JobPostings), new Action<JobPostings>(this.detach_JobPostings));
			this._Projects = new EntitySet<Projects>(new Action<Projects>(this.attach_Projects), new Action<Projects>(this.detach_Projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnifiedSocialCreditCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UnifiedSocialCreditCode
		{
			get
			{
				return this._UnifiedSocialCreditCode;
			}
			set
			{
				if ((this._UnifiedSocialCreditCode != value))
				{
					this.OnUnifiedSocialCreditCodeChanging(value);
					this.SendPropertyChanging();
					this._UnifiedSocialCreditCode = value;
					this.SendPropertyChanged("UnifiedSocialCreditCode");
					this.OnUnifiedSocialCreditCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoImage", DbType="VarChar(MAX)")]
		public string LogoImage
		{
			get
			{
				return this._LogoImage;
			}
			set
			{
				if ((this._LogoImage != value))
				{
					this.OnLogoImageChanging(value);
					this.SendPropertyChanging();
					this._LogoImage = value;
					this.SendPropertyChanged("LogoImage");
					this.OnLogoImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_CompanyProfiles", Storage="_CompanyProfiles", ThisKey="Id", OtherKey="EnterpriseId")]
		public EntitySet<CompanyProfiles> CompanyProfiles
		{
			get
			{
				return this._CompanyProfiles;
			}
			set
			{
				this._CompanyProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_CompanyReviews", Storage="_CompanyReviews", ThisKey="Id", OtherKey="EnterpriseId")]
		public EntitySet<CompanyReviews> CompanyReviews
		{
			get
			{
				return this._CompanyReviews;
			}
			set
			{
				this._CompanyReviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_InternshipEmploymentReviews", Storage="_InternshipEmploymentReviews", ThisKey="Id", OtherKey="EnterpriseId")]
		public EntitySet<InternshipEmploymentReviews> InternshipEmploymentReviews
		{
			get
			{
				return this._InternshipEmploymentReviews;
			}
			set
			{
				this._InternshipEmploymentReviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_InterviewInvitations", Storage="_InterviewInvitations", ThisKey="Id", OtherKey="EnterpriseId")]
		public EntitySet<InterviewInvitations> InterviewInvitations
		{
			get
			{
				return this._InterviewInvitations;
			}
			set
			{
				this._InterviewInvitations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_JobPostings", Storage="_JobPostings", ThisKey="Id", OtherKey="EnterpriseId")]
		public EntitySet<JobPostings> JobPostings
		{
			get
			{
				return this._JobPostings;
			}
			set
			{
				this._JobPostings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Projects", Storage="_Projects", ThisKey="Id", OtherKey="EnterpriseId")]
		public EntitySet<Projects> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CompanyProfiles(CompanyProfiles entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_CompanyProfiles(CompanyProfiles entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_CompanyReviews(CompanyReviews entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_CompanyReviews(CompanyReviews entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_InternshipEmploymentReviews(InternshipEmploymentReviews entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_InternshipEmploymentReviews(InternshipEmploymentReviews entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_InterviewInvitations(InterviewInvitations entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_InterviewInvitations(InterviewInvitations entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_JobPostings(JobPostings entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_JobPostings(JobPostings entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
		
		private void attach_Projects(Projects entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = this;
		}
		
		private void detach_Projects(Projects entity)
		{
			this.SendPropertyChanging();
			entity.Enterprises = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InternshipEmploymentExperiences")]
	public partial class InternshipEmploymentExperiences : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StudentId;
		
		private string _ExperienceText;
		
		private EntityRef<Students> _Students;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStudentIdChanging(int value);
    partial void OnStudentIdChanged();
    partial void OnExperienceTextChanging(string value);
    partial void OnExperienceTextChanged();
    #endregion
		
		public InternshipEmploymentExperiences()
		{
			this._Students = default(EntityRef<Students>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="Int NOT NULL")]
		public int StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._Students.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExperienceText", DbType="VarChar(MAX)")]
		public string ExperienceText
		{
			get
			{
				return this._ExperienceText;
			}
			set
			{
				if ((this._ExperienceText != value))
				{
					this.OnExperienceTextChanging(value);
					this.SendPropertyChanging();
					this._ExperienceText = value;
					this.SendPropertyChanged("ExperienceText");
					this.OnExperienceTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_InternshipEmploymentExperiences", Storage="_Students", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public Students Students
		{
			get
			{
				return this._Students.Entity;
			}
			set
			{
				Students previousValue = this._Students.Entity;
				if (((previousValue != value) 
							|| (this._Students.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Students.Entity = null;
						previousValue.InternshipEmploymentExperiences.Remove(this);
					}
					this._Students.Entity = value;
					if ((value != null))
					{
						value.InternshipEmploymentExperiences.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(int);
					}
					this.SendPropertyChanged("Students");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InternshipEmploymentReviews")]
	public partial class InternshipEmploymentReviews : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EnterpriseId;
		
		private int _StudentId;
		
		private string _ReviewText;
		
		private System.Nullable<int> _Rating;
		
		private EntityRef<Enterprises> _Enterprises;
		
		private EntityRef<Students> _Students;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEnterpriseIdChanging(int value);
    partial void OnEnterpriseIdChanged();
    partial void OnStudentIdChanging(int value);
    partial void OnStudentIdChanged();
    partial void OnReviewTextChanging(string value);
    partial void OnReviewTextChanged();
    partial void OnRatingChanging(System.Nullable<int> value);
    partial void OnRatingChanged();
    #endregion
		
		public InternshipEmploymentReviews()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			this._Students = default(EntityRef<Students>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseId", DbType="Int NOT NULL")]
		public int EnterpriseId
		{
			get
			{
				return this._EnterpriseId;
			}
			set
			{
				if ((this._EnterpriseId != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIdChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseId = value;
					this.SendPropertyChanged("EnterpriseId");
					this.OnEnterpriseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="Int NOT NULL")]
		public int StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._Students.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewText", DbType="VarChar(MAX)")]
		public string ReviewText
		{
			get
			{
				return this._ReviewText;
			}
			set
			{
				if ((this._ReviewText != value))
				{
					this.OnReviewTextChanging(value);
					this.SendPropertyChanging();
					this._ReviewText = value;
					this.SendPropertyChanged("ReviewText");
					this.OnReviewTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int")]
		public System.Nullable<int> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_InternshipEmploymentReviews", Storage="_Enterprises", ThisKey="EnterpriseId", OtherKey="Id", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.InternshipEmploymentReviews.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.InternshipEmploymentReviews.Add(this);
						this._EnterpriseId = value.Id;
					}
					else
					{
						this._EnterpriseId = default(int);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_InternshipEmploymentReviews", Storage="_Students", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public Students Students
		{
			get
			{
				return this._Students.Entity;
			}
			set
			{
				Students previousValue = this._Students.Entity;
				if (((previousValue != value) 
							|| (this._Students.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Students.Entity = null;
						previousValue.InternshipEmploymentReviews.Remove(this);
					}
					this._Students.Entity = value;
					if ((value != null))
					{
						value.InternshipEmploymentReviews.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(int);
					}
					this.SendPropertyChanged("Students");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InterviewInvitations")]
	public partial class InterviewInvitations : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EnterpriseId;
		
		private int _StudentId;
		
		private int _ProjectId;
		
		private EntityRef<Enterprises> _Enterprises;
		
		private EntityRef<Students> _Students;
		
		private EntityRef<Projects> _Projects;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEnterpriseIdChanging(int value);
    partial void OnEnterpriseIdChanged();
    partial void OnStudentIdChanging(int value);
    partial void OnStudentIdChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    #endregion
		
		public InterviewInvitations()
		{
			this._Enterprises = default(EntityRef<Enterprises>);
			this._Students = default(EntityRef<Students>);
			this._Projects = default(EntityRef<Projects>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseId", DbType="Int NOT NULL")]
		public int EnterpriseId
		{
			get
			{
				return this._EnterpriseId;
			}
			set
			{
				if ((this._EnterpriseId != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIdChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseId = value;
					this.SendPropertyChanged("EnterpriseId");
					this.OnEnterpriseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="Int NOT NULL")]
		public int StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._Students.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Projects.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_InterviewInvitations", Storage="_Enterprises", ThisKey="EnterpriseId", OtherKey="Id", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.InterviewInvitations.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.InterviewInvitations.Add(this);
						this._EnterpriseId = value.Id;
					}
					else
					{
						this._EnterpriseId = default(int);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_InterviewInvitations", Storage="_Students", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public Students Students
		{
			get
			{
				return this._Students.Entity;
			}
			set
			{
				Students previousValue = this._Students.Entity;
				if (((previousValue != value) 
							|| (this._Students.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Students.Entity = null;
						previousValue.InterviewInvitations.Remove(this);
					}
					this._Students.Entity = value;
					if ((value != null))
					{
						value.InterviewInvitations.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(int);
					}
					this.SendPropertyChanged("Students");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_InterviewInvitations", Storage="_Projects", ThisKey="ProjectId", OtherKey="Id", IsForeignKey=true)]
		public Projects Projects
		{
			get
			{
				return this._Projects.Entity;
			}
			set
			{
				Projects previousValue = this._Projects.Entity;
				if (((previousValue != value) 
							|| (this._Projects.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Projects.Entity = null;
						previousValue.InterviewInvitations.Remove(this);
					}
					this._Projects.Entity = value;
					if ((value != null))
					{
						value.InterviewInvitations.Add(this);
						this._ProjectId = value.Id;
					}
					else
					{
						this._ProjectId = default(int);
					}
					this.SendPropertyChanged("Projects");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobPostings")]
	public partial class JobPostings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EnterpriseId;
		
		private string _Position;
		
		private string _Salary;
		
		private string _Requirements;
		
		private EntitySet<Resumes> _Resumes;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEnterpriseIdChanging(int value);
    partial void OnEnterpriseIdChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnSalaryChanging(string value);
    partial void OnSalaryChanged();
    partial void OnRequirementsChanging(string value);
    partial void OnRequirementsChanged();
    #endregion
		
		public JobPostings()
		{
			this._Resumes = new EntitySet<Resumes>(new Action<Resumes>(this.attach_Resumes), new Action<Resumes>(this.detach_Resumes));
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseId", DbType="Int NOT NULL")]
		public int EnterpriseId
		{
			get
			{
				return this._EnterpriseId;
			}
			set
			{
				if ((this._EnterpriseId != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIdChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseId = value;
					this.SendPropertyChanged("EnterpriseId");
					this.OnEnterpriseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="VarChar(100)")]
		public string Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requirements", DbType="VarChar(MAX)")]
		public string Requirements
		{
			get
			{
				return this._Requirements;
			}
			set
			{
				if ((this._Requirements != value))
				{
					this.OnRequirementsChanging(value);
					this.SendPropertyChanging();
					this._Requirements = value;
					this.SendPropertyChanged("Requirements");
					this.OnRequirementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobPostings_Resumes", Storage="_Resumes", ThisKey="Id", OtherKey="JobPostingId")]
		public EntitySet<Resumes> Resumes
		{
			get
			{
				return this._Resumes;
			}
			set
			{
				this._Resumes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_JobPostings", Storage="_Enterprises", ThisKey="EnterpriseId", OtherKey="Id", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.JobPostings.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.JobPostings.Add(this);
						this._EnterpriseId = value.Id;
					}
					else
					{
						this._EnterpriseId = default(int);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resumes(Resumes entity)
		{
			this.SendPropertyChanging();
			entity.JobPostings = this;
		}
		
		private void detach_Resumes(Resumes entity)
		{
			this.SendPropertyChanging();
			entity.JobPostings = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonalResumes")]
	public partial class PersonalResumes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StudentId;
		
		private string _ResumeText;
		
		private EntityRef<Students> _Students;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStudentIdChanging(int value);
    partial void OnStudentIdChanged();
    partial void OnResumeTextChanging(string value);
    partial void OnResumeTextChanged();
    #endregion
		
		public PersonalResumes()
		{
			this._Students = default(EntityRef<Students>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="Int NOT NULL")]
		public int StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._Students.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResumeText", DbType="VarChar(MAX)")]
		public string ResumeText
		{
			get
			{
				return this._ResumeText;
			}
			set
			{
				if ((this._ResumeText != value))
				{
					this.OnResumeTextChanging(value);
					this.SendPropertyChanging();
					this._ResumeText = value;
					this.SendPropertyChanged("ResumeText");
					this.OnResumeTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_PersonalResumes", Storage="_Students", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public Students Students
		{
			get
			{
				return this._Students.Entity;
			}
			set
			{
				Students previousValue = this._Students.Entity;
				if (((previousValue != value) 
							|| (this._Students.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Students.Entity = null;
						previousValue.PersonalResumes.Remove(this);
					}
					this._Students.Entity = value;
					if ((value != null))
					{
						value.PersonalResumes.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(int);
					}
					this.SendPropertyChanged("Students");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projects")]
	public partial class Projects : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EnterpriseId;
		
		private string _Name;
		
		private string _Category;
		
		private string _Requirements;
		
		private EntitySet<InterviewInvitations> _InterviewInvitations;
		
		private EntitySet<ProjectSubmissions> _ProjectSubmissions;
		
		private EntityRef<Enterprises> _Enterprises;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEnterpriseIdChanging(int value);
    partial void OnEnterpriseIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnRequirementsChanging(string value);
    partial void OnRequirementsChanged();
    #endregion
		
		public Projects()
		{
			this._InterviewInvitations = new EntitySet<InterviewInvitations>(new Action<InterviewInvitations>(this.attach_InterviewInvitations), new Action<InterviewInvitations>(this.detach_InterviewInvitations));
			this._ProjectSubmissions = new EntitySet<ProjectSubmissions>(new Action<ProjectSubmissions>(this.attach_ProjectSubmissions), new Action<ProjectSubmissions>(this.detach_ProjectSubmissions));
			this._Enterprises = default(EntityRef<Enterprises>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseId", DbType="Int NOT NULL")]
		public int EnterpriseId
		{
			get
			{
				return this._EnterpriseId;
			}
			set
			{
				if ((this._EnterpriseId != value))
				{
					if (this._Enterprises.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIdChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseId = value;
					this.SendPropertyChanged("EnterpriseId");
					this.OnEnterpriseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(100)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requirements", DbType="VarChar(MAX)")]
		public string Requirements
		{
			get
			{
				return this._Requirements;
			}
			set
			{
				if ((this._Requirements != value))
				{
					this.OnRequirementsChanging(value);
					this.SendPropertyChanging();
					this._Requirements = value;
					this.SendPropertyChanged("Requirements");
					this.OnRequirementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_InterviewInvitations", Storage="_InterviewInvitations", ThisKey="Id", OtherKey="ProjectId")]
		public EntitySet<InterviewInvitations> InterviewInvitations
		{
			get
			{
				return this._InterviewInvitations;
			}
			set
			{
				this._InterviewInvitations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_ProjectSubmissions", Storage="_ProjectSubmissions", ThisKey="Id", OtherKey="ProjectId")]
		public EntitySet<ProjectSubmissions> ProjectSubmissions
		{
			get
			{
				return this._ProjectSubmissions;
			}
			set
			{
				this._ProjectSubmissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enterprises_Projects", Storage="_Enterprises", ThisKey="EnterpriseId", OtherKey="Id", IsForeignKey=true)]
		public Enterprises Enterprises
		{
			get
			{
				return this._Enterprises.Entity;
			}
			set
			{
				Enterprises previousValue = this._Enterprises.Entity;
				if (((previousValue != value) 
							|| (this._Enterprises.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enterprises.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Enterprises.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._EnterpriseId = value.Id;
					}
					else
					{
						this._EnterpriseId = default(int);
					}
					this.SendPropertyChanged("Enterprises");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InterviewInvitations(InterviewInvitations entity)
		{
			this.SendPropertyChanging();
			entity.Projects = this;
		}
		
		private void detach_InterviewInvitations(InterviewInvitations entity)
		{
			this.SendPropertyChanging();
			entity.Projects = null;
		}
		
		private void attach_ProjectSubmissions(ProjectSubmissions entity)
		{
			this.SendPropertyChanging();
			entity.Projects = this;
		}
		
		private void detach_ProjectSubmissions(ProjectSubmissions entity)
		{
			this.SendPropertyChanging();
			entity.Projects = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectSubmissions")]
	public partial class ProjectSubmissions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProjectId;
		
		private int _StudentId;
		
		private string _SubmissionText;
		
		private string _SubmissionImage;
		
		private string _SubmissionAttachment;
		
		private EntityRef<Projects> _Projects;
		
		private EntityRef<Students> _Students;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnStudentIdChanging(int value);
    partial void OnStudentIdChanged();
    partial void OnSubmissionTextChanging(string value);
    partial void OnSubmissionTextChanged();
    partial void OnSubmissionImageChanging(string value);
    partial void OnSubmissionImageChanged();
    partial void OnSubmissionAttachmentChanging(string value);
    partial void OnSubmissionAttachmentChanged();
    #endregion
		
		public ProjectSubmissions()
		{
			this._Projects = default(EntityRef<Projects>);
			this._Students = default(EntityRef<Students>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Projects.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="Int NOT NULL")]
		public int StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._Students.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionText", DbType="VarChar(MAX)")]
		public string SubmissionText
		{
			get
			{
				return this._SubmissionText;
			}
			set
			{
				if ((this._SubmissionText != value))
				{
					this.OnSubmissionTextChanging(value);
					this.SendPropertyChanging();
					this._SubmissionText = value;
					this.SendPropertyChanged("SubmissionText");
					this.OnSubmissionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionImage", DbType="VarChar(MAX)")]
		public string SubmissionImage
		{
			get
			{
				return this._SubmissionImage;
			}
			set
			{
				if ((this._SubmissionImage != value))
				{
					this.OnSubmissionImageChanging(value);
					this.SendPropertyChanging();
					this._SubmissionImage = value;
					this.SendPropertyChanged("SubmissionImage");
					this.OnSubmissionImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionAttachment", DbType="VarChar(MAX)")]
		public string SubmissionAttachment
		{
			get
			{
				return this._SubmissionAttachment;
			}
			set
			{
				if ((this._SubmissionAttachment != value))
				{
					this.OnSubmissionAttachmentChanging(value);
					this.SendPropertyChanging();
					this._SubmissionAttachment = value;
					this.SendPropertyChanged("SubmissionAttachment");
					this.OnSubmissionAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projects_ProjectSubmissions", Storage="_Projects", ThisKey="ProjectId", OtherKey="Id", IsForeignKey=true)]
		public Projects Projects
		{
			get
			{
				return this._Projects.Entity;
			}
			set
			{
				Projects previousValue = this._Projects.Entity;
				if (((previousValue != value) 
							|| (this._Projects.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Projects.Entity = null;
						previousValue.ProjectSubmissions.Remove(this);
					}
					this._Projects.Entity = value;
					if ((value != null))
					{
						value.ProjectSubmissions.Add(this);
						this._ProjectId = value.Id;
					}
					else
					{
						this._ProjectId = default(int);
					}
					this.SendPropertyChanged("Projects");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_ProjectSubmissions", Storage="_Students", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public Students Students
		{
			get
			{
				return this._Students.Entity;
			}
			set
			{
				Students previousValue = this._Students.Entity;
				if (((previousValue != value) 
							|| (this._Students.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Students.Entity = null;
						previousValue.ProjectSubmissions.Remove(this);
					}
					this._Students.Entity = value;
					if ((value != null))
					{
						value.ProjectSubmissions.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(int);
					}
					this.SendPropertyChanged("Students");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resumes")]
	public partial class Resumes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _JobPostingId;
		
		private int _StudentId;
		
		private EntityRef<JobPostings> _JobPostings;
		
		private EntityRef<Students> _Students;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnJobPostingIdChanging(int value);
    partial void OnJobPostingIdChanged();
    partial void OnStudentIdChanging(int value);
    partial void OnStudentIdChanged();
    #endregion
		
		public Resumes()
		{
			this._JobPostings = default(EntityRef<JobPostings>);
			this._Students = default(EntityRef<Students>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPostingId", DbType="Int NOT NULL")]
		public int JobPostingId
		{
			get
			{
				return this._JobPostingId;
			}
			set
			{
				if ((this._JobPostingId != value))
				{
					if (this._JobPostings.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobPostingIdChanging(value);
					this.SendPropertyChanging();
					this._JobPostingId = value;
					this.SendPropertyChanged("JobPostingId");
					this.OnJobPostingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="Int NOT NULL")]
		public int StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					if (this._Students.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobPostings_Resumes", Storage="_JobPostings", ThisKey="JobPostingId", OtherKey="Id", IsForeignKey=true)]
		public JobPostings JobPostings
		{
			get
			{
				return this._JobPostings.Entity;
			}
			set
			{
				JobPostings previousValue = this._JobPostings.Entity;
				if (((previousValue != value) 
							|| (this._JobPostings.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobPostings.Entity = null;
						previousValue.Resumes.Remove(this);
					}
					this._JobPostings.Entity = value;
					if ((value != null))
					{
						value.Resumes.Add(this);
						this._JobPostingId = value.Id;
					}
					else
					{
						this._JobPostingId = default(int);
					}
					this.SendPropertyChanged("JobPostings");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_Resumes", Storage="_Students", ThisKey="StudentId", OtherKey="Id", IsForeignKey=true)]
		public Students Students
		{
			get
			{
				return this._Students.Entity;
			}
			set
			{
				Students previousValue = this._Students.Entity;
				if (((previousValue != value) 
							|| (this._Students.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Students.Entity = null;
						previousValue.Resumes.Remove(this);
					}
					this._Students.Entity = value;
					if ((value != null))
					{
						value.Resumes.Add(this);
						this._StudentId = value.Id;
					}
					else
					{
						this._StudentId = default(int);
					}
					this.SendPropertyChanged("Students");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
